# Generated by Django 5.1.6 on 2025-03-29 13:07

import django.db.models.deletion
import tasks.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Formsubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_sprints', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Epic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_epics', to=settings.AUTH_USER_MODEL)),
                ('sprints', models.ManyToManyField(related_name='epics', to='tasks.sprint')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('status', models.CharField(choices=[('UNASSIGNED', 'Unassigned'), ('IN_PROGRESS', 'In Progress'), ('DONE', 'Completed'), ('ARCHIVED', 'Archived')], db_comment='Can be Assigned, In Progress, Done, or Archived', default='UNASSIGNED', max_length=20)),
                ('priority', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], db_comment='Can be High, Medium, Low', default='LOW', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('file_upload', models.FileField(blank=True, null=True, upload_to='tasks/files/')),
                ('image_upload', models.ImageField(blank=True, null=True, upload_to='tasks/images/')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('epic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.epic')),
                ('owner', models.ForeignKey(blank=True, db_comment='Foreign key to the User who currently owns the task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table_comment': 'Hold Information about tasks',
                'permissions': [('custom_task', 'Custom Task Permission')],
            },
            bases=(tasks.models.VersionMixing, models.Model),
        ),
        migrations.CreateModel(
            name='SubscribedEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchers', to='tasks.task')),
            ],
        ),
        migrations.AddField(
            model_name='sprint',
            name='tasks',
            field=models.ManyToManyField(blank=True, related_name='sprints', to='tasks.task'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.CheckConstraint(condition=models.Q(('status__in', ['UNASSIGNED', 'IN_PROGRESS', 'DONE', 'ARCHIVED'])), name='check_status'),
        ),
        migrations.AddConstraint(
            model_name='task',
            constraint=models.CheckConstraint(condition=models.Q(('due_date__gte', models.F('created_at'))), name='due_date_after_created_date'),
        ),
        migrations.AddConstraint(
            model_name='sprint',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__gt', models.F('start_date'))), name='end_date_after_start_date'),
        ),
    ]
